plugins {
    id 'groovy'
    id "org.openapi.generator" version "4.3.1"
}

import buildTools.CheckoutSpecFileCommands

ext {
    pmpModelVersion = '38.24.3'
    pmpTestUtilsVersion = '27.8.0'
    springJmsVersion = '4.3.25.RELEASE'
    jacksonVersion = '2.10.0'

    metadataDdiSchemasSpecPath = "specs/shared-schemas/metadata/Metadata-DDI.yaml"
    metadataDdiSchemasVersion = 'v0.2'
    //metadataDdiSchemasVersion = 'v1.0-merlinprofile.1'
    schemaModelsDir = file("${project.buildDir}/generated-sources/schema-models")
}

task checkoutMetadataDDISpec(type: CheckoutSpecFileCommands) {
    spec = metadataDdiSchemasSpecPath
    tag = "Metadata-DDI-schemas-$metadataDdiSchemasVersion"
    outputFile = file("${project.rootProject.rootDir}/$spec")
}

task generateDDIModels(type: org.openapitools.generator.gradle.plugin.tasks.GenerateTask, dependsOn: checkoutMetadataDDISpec) {
    validateSpec = true
    generatorName = "spring"
    inputSpec = "${rootProject.projectDir}/${metadataDdiSchemasSpecPath}".toString()
    outputDir = schemaModelsDir.toString()
    modelPackage = 'com.sky.csc.metadata.ddi.model'
    systemProperties = [
            models : ""
    ]
    configOptions = [
            hideGenerationTimestamp: 'true',
            dateLibrary            : 'java8',
            sourceFolder: ""
    ]
}

sourceSets {
    main {
        java {
            srcDirs += schemaModelsDir
        }
    }
}

compileJava.dependsOn tasks.generateDDIModels

// DDI only test tasks
task testDdi(type: Test) {
    group = 'verification'
    reports.junitXml.destination = file("${project.buildDir}/test-results/junit-reports") // https://github.com/sky-uk/jenkins-tooling/blob/36d28ee4dae27a10d3fde208cb9b73b38136dbb9/examples/reference/cd.yml#L61

    useJUnit {
        includeCategories 'com.sky.csc.categories.DDI'
        excludeCategories 'com.sky.csc.categories.WIP'
    }
}

task testDdiWip(type: Test) {
    group = 'verification'
    ignoreFailures = true
    reports.junitXml.destination = file("${project.buildDir}/test-results/wip/junit-reports") // https://github.com/sky-uk/jenkins-tooling/blob/36d28ee4dae27a10d3fde208cb9b73b38136dbb9/examples/reference/cd.yml#L61

    useJUnit {
        includeCategories 'com.sky.csc.categories.DDI'
        excludeCategories 'com.sky.csc.categories.Done'
    }
}

// Default test task to run all non-WIP tests
test {
    reports.junitXml.destination = file("${project.buildDir}/test-results/junit-reports") // https://github.com/sky-uk/jenkins-tooling/blob/36d28ee4dae27a10d3fde208cb9b73b38136dbb9/examples/reference/cd.yml#L61

    useJUnit {
        includeCategories 'com.sky.csc.categories.Done'
    }
}

task testWip(type: Test) {
    group = 'verification'
    ignoreFailures = true
    reports.junitXml.destination = file("${project.buildDir}/test-results/wip/junit-reports") // https://github.com/sky-uk/jenkins-tooling/blob/36d28ee4dae27a10d3fde208cb9b73b38136dbb9/examples/reference/cd.yml#L61

    useJUnit {
        excludeCategories 'com.sky.csc.categories.Done'
    }
}

dependencies {
    implementation project(":common")

    implementation 'org.codehaus.groovy:groovy-all:2.5.4'
    implementation "com.sky.pmp:pmp-model:$pmpModelVersion"
    implementation "com.sky.pmp:pmp-test-utils:$pmpTestUtilsVersion"
    implementation "org.springframework:spring-jms:$springJmsVersion"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"

    // bean validation
    implementation 'org.glassfish:javax.el:3.0.0'
    implementation 'org.hibernate:hibernate-validator:6.1.5.Final'

    // codegen models
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'io.swagger:swagger-annotations:1.5.24'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.1'

    // kafka
    implementation "com.sky.kaas:kafka-client:0.12.0"

    // rest
    implementation "org.codehaus.groovy.modules.http-builder:http-builder:0.7.1"
    testImplementation 'org.awaitility:awaitility-groovy:4.0.2'

    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
}
